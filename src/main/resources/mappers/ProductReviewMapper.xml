<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS15.dao.ProductReviewDAO">

	<select id="totRecCnt" resultType="int">
		select count(*) from productReview <if test="part != '모든제품'"> where productCategory = #{part}</if>
	</select>
	
	<select id="getProductReview" resultType="com.spring.javaclassS15.vo.ProductReviewVO">
		select *,datediff(uploadDate, now()) as dateDiff,
		timestampdiff(hour, uploadDate, now()) as hourDiff,
		(select count(*) from reviewComment where part='productReview' and partIdx=p.idx) as commentCnt
		from productReview p <if test="part != '모든제품'"> where productCategory = #{part} </if> order by idx desc limit #{startIndexNo},#{pageSize};
	</select>

	<select id="getproductReviewContent" resultType="com.spring.javaclassS15.vo.ProductReviewVO">
		select *,(select count(*) from reviewComment where part='productReview' and partIdx=p.idx) as commentCnt
		from productReview p where idx = #{idx};
		<!-- select * from productReview where idx = #{idx}; -->
	</select>

	<select id="getPdReviewComment" resultType="com.spring.javaclassS15.vo.ReviewCommentVO">
		select * from reviewComment where part = 'productReview' and partIdx = #{idx} order by commentCnt;
	</select>

	<select id="getPdReviewParentCommentCheck" resultType="com.spring.javaclassS15.vo.ReviewCommentVO">
		select * from reviewComment where part = 'productReview' and partIdx = #{partIdx} order by idx desc limit 1;
	</select>

	<select id="getPetCategoryCheck" resultType="com.spring.javaclassS15.vo.ProductReviewVO">
		select * from productReview where petCategory = #{petCategorySelect} order by idx desc;
	</select>

	<select id="getOrgReviewVO" resultType="com.spring.javaclassS15.vo.ProductReviewVO">
		select * from productReview where idx=#{idx};
	</select>
	
	
	
	
	<insert id="setproductReviewInsert">
		insert into productReview values(default,#{vo.mid},#{vo.nickName},#{vo.photo},#{vo.petCategory},#{vo.productCategory},#{vo.brand},#{vo.productName},#{vo.memberHeart},#{vo.petHeart},#{vo.goodPoint},#{vo.badPoint},#{vo.productPhoto},#{vo.repurchase},default,default,default,default,#{vo.hostIp});
	</insert>
	
	<insert id="setPdReviewCommentInputOK">
		insert into reviewComment values(default,#{commentVO.commentLev},#{commentVO.commentCnt},#{commentVO.part},#{commentVO.partIdx},#{commentVO.mid},#{commentVO.nickName},#{commentVO.photo},#{commentVO.content},default);
	</insert>
	
	
	
	<update id="setReadNumPlus">
		update productReview set readNum = readNum+1 where idx = #{idx};
	</update>
	
	<update id="setpdReviewHeartUp">
		update productReview set goodHeart = goodHeart+1 where idx = #{idx};
	</update>
	
	<update id="setpdReviewComplaint">
		update productReview set complaint = complaint+1 where idx = #{idx};
	</update>
	
	<update id="setproductReviewUpdate">
		update productReview set petCategory=#{vo.petCategory}, productCategory=#{vo.productCategory}, brand=#{vo.brand}, productName=#{vo.productName}, memberHeart=#{vo.memberHeart}, petHeart=#{vo.petHeart}, goodPoint=#{vo.goodPoint}, badPoint=#{vo.badPoint}, productPhoto=#{vo.productPhoto}, repurchase=#{vo.repurchase} where idx = #{vo.idx};
	</update>
	
	<update id="setReviewHeartDelete">
		update productReview set goodHeart = goodHeart-1 where idx = #{idx};
	</update>
	
	
	
	
	<delete id="setReviewDelete">
		delete from productReview where idx = #{idx};
	</delete>

</mapper>